name: Security Scans
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '18 8 * * 2'
permissions:
  contents: read
jobs:
  ossf:
    name: OSSF Scorecard analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
    steps:
      - name: "Checkout code"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - name: "Run analysis"
        uses: ossf/scorecard-action@dc50aa9510b46c811795eb24b2f1ba02a914e534 # v2.3.3
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: ${{ github.event_name != 'pull_request' }}
      - name: "Upload artifact"
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5
      - name: "Upload to code-scanning"
        if: github.event_name != 'pull_request'
        uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
        with:
          sarif_file: results.sarif
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@72eb03d02c7872a771aacd928f3123ac62ad6d3a # v4.3.3
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["go"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Initialize CodeQL
        uses: github/codeql-action/init@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
        with:
          category: "/language:${{matrix.language}}"

  govulncheck:
    name: Run govulncheck
    permissions:
      contents: read
      security-events: write 
    runs-on: ubuntu-latest
    steps:
    - id: govulncheck
      uses: golang/govulncheck-action@dd0578b371c987f96d1185abb54344b44352bd58 # v1.0.3
      with:
          go-version-input: 1.22.4
          go-package: ./...
          output-format: sarif
          output-file: govuln.sarif
    - name: Post-process sarif files
      run : |
        /usr/bin/jq '.runs[] += {"results":[]}' < govuln.sarif > govuln2.sarif
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
      with:
        sarif_file: govuln2.sarif
  # Disabled because its free version is too limited and it keeps failing due to exceeding run limit
  # snyk:
  #   permissions:
  #     contents: read
  #     security-events: write 
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
  #   - name: Build a Docker image
  #     run: docker build -t michad/tilegroxy .
  #   - name: Run Snyk to check Docker image for vulnerabilities
  #     continue-on-error: true
  #     uses: snyk/actions/docker@a1346e4eaf761d462da22c34c681dc06849b6851
  #     env:
  #       SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #     with:
  #       image: michad/tilegroxy
  #       args: --file=Dockerfile
  #     # Snyk sometimes generates invalid severity scores that tank the upload step. And they're insistent on not fixing the bug. So we need to post-process it to avoid build failures
  #     # See https://github.com/github/codeql-action/issues/2187 for more context.
  #   - name: Post-process sarif output
  #     run: |
  #       sed -i 's/"security-severity": null/"security-severity": "0"/g' snyk.sarif
  #       sed -i 's/"security-severity": "null"/"security-severity": "0"/g' snyk.sarif
  #       sed -i 's/"security-severity": "undefined"/"security-severity": "0"/g' snyk.sarif
  #   - name: Upload result to GitHub Code Scanning
  #     uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
  #     with:
  #       sarif_file: snyk.sarif
