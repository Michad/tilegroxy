name: Release
on:
  push:
    tags:
      - "v*.*.*"
permissions:
  contents: read
jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Set up Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: '1.23'

    - name: Get Build Vars
      id: vars
      run: |
        echo "PKG=github.com/Michad/tilegroxy" >> $GITHUB_OUTPUT
        echo "VERSION=$(git describe --tag --abbrev=0 --dirty)" >> $GITHUB_OUTPUT
        echo "REF=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "DATE=$(date -Iseconds --u)" >> $GITHUB_OUTPUT

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
      id: import_gpg
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}

    - name: Release
      uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        distribution: goreleaser
        version: "~> v2"
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
        PKG: ${{ steps.vars.outputs.PKG }}
        VERSION: ${{ steps.vars.outputs.VERSION }}
        REF: ${{ steps.vars.outputs.REF }}
        DATE: ${{ steps.vars.outputs.DATE }}
  